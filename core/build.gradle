apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion deps.android.compileSdk

    defaultConfig {
        minSdkVersion deps.android.minSdk
        targetSdkVersion deps.android.targetSdk
        versionCode 1
        versionName deps.lib.version
        vectorDrawables.useSupportLibrary true

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "${deps.api.kotlinJvmTarget}"
            freeCompilerArgs = ['-Xopt-in=kotlin.RequiresOptIn']
        }
    }
}

ext {
    deps.lib.artifactId = 'core'
    deps.lib.desc = 'core of library to pick images, photo or video from android phone'
}

apply from: "${rootProject.projectDir}/scripts/publish-mavencentral.gradle"

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.google.android.material:material:${deps.libs.material}"
    implementation "androidx.recyclerview:recyclerview:${deps.libs.recycler}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${deps.api.kotlin}"
    implementation "androidx.fragment:fragment-ktx:${deps.libs.fragment}"
    implementation "androidx.core:core-ktx:${deps.libs.ktx}"
    implementation "io.github.iamthevoid.extensions:util:${deps.utils}"
    implementation "io.github.iamthevoid.extensions:android:${deps.utils}"
    implementation "io.github.iamthevoid.extensions:pure:${deps.utils}"

}
